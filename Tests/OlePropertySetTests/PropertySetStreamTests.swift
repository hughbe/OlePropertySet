import XCTest
import DataStream
import CompoundFileReader
@testable import OlePropertySet

final class PropertySetStreamTests: XCTestCase {
    func testExample() throws {
        do {
            /// [MS-OLEPS] 3.1 SummaryInformation Property Set
            /// The following table shows the binary contents of a stream representing a SummaryInformation Property Set. This is a simple
            /// property set, as the SummaryInformation format does not require support for stream and storage type properties. The name
            /// of this stream is "\005SummaryInformation", as specified in section 2.23.
            let data = Data([
                0xFE, 0xFF, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xE0, 0x85, 0x9F, 0xF2,
                0xF9, 0x4F, 0x68, 0x10, 0xAB, 0x91, 0x08, 0x00, 0x2B, 0x27, 0xB3, 0xD9, 0x30, 0x00, 0x00, 0x00,
                0x8C, 0x01, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00,
                0x02, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xB8, 0x00, 0x00, 0x00,
                0x04, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xD0, 0x00, 0x00, 0x00,
                0x06, 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00,
                0x08, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00,
                0x12, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x3C, 0x01, 0x00, 0x00,
                0x0B, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00,
                0x0D, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x6C, 0x01, 0x00, 0x00,
                0x0F, 0x00, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x7C, 0x01, 0x00, 0x00,
                0x13, 0x00, 0x00, 0x00, 0x84, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xE4, 0x04, 0x00, 0x00,
                0x1E, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x4A, 0x6F, 0x65, 0x27, 0x73, 0x20, 0x64, 0x6F,
                0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
                0x4A, 0x6F, 0x62, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x4A, 0x6F, 0x65, 0x00,
                0x1E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00,
                0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
                0x4E, 0x6F, 0x72, 0x6D, 0x61, 0x6C, 0x2E, 0x64, 0x6F, 0x74, 0x6D, 0x00, 0x1E, 0x00, 0x00, 0x00,
                0x0A, 0x00, 0x00, 0x00, 0x43, 0x6F, 0x72, 0x6E, 0x65, 0x6C, 0x69, 0x75, 0x73, 0x00, 0x00, 0x00,
                0x1E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00,
                0x18, 0x00, 0x00, 0x00, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x20, 0x4F, 0x66,
                0x66, 0x69, 0x63, 0x65, 0x20, 0x57, 0x6F, 0x72, 0x64, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
                0x00, 0x6E, 0xD9, 0xA2, 0x42, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x16, 0xD0, 0xA1,
                0x4E, 0x8E, 0xC6, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xF2, 0xD5, 0x2A, 0xCE, 0xC6, 0x01,
                0x40, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xDC, 0x73, 0xDD, 0x80, 0xC8, 0x01, 0x03, 0x00, 0x00, 0x00,
                0x0E, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xE5, 0x0D, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
                0x38, 0x4F, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            ])
            var dataStream = DataStream(data)
            let summaryInformation = try PropertySetStream(dataStream: &dataStream)
            XCTAssertEqual(0x04E4, summaryInformation.propertySet0.getProperty(id: 0x00000001) as Int16?)
            XCTAssertEqual("Joe's document", summaryInformation.propertySet0.getProperty(id: 0x00000002) as String?)
            XCTAssertEqual("Job", summaryInformation.propertySet0.getProperty(id: 0x00000003) as String?)
            XCTAssertEqual("Joe", summaryInformation.propertySet0.getProperty(id: 0x00000004) as String?)
            XCTAssertEqual("\0\0\0", summaryInformation.propertySet0.getProperty(id: 0x00000005) as String?)
            XCTAssertEqual("\0\0\0", summaryInformation.propertySet0.getProperty(id: 0x00000006) as String?)
            XCTAssertEqual("Normal.dotm", summaryInformation.propertySet0.getProperty(id: 0x00000007) as String?)
            XCTAssertEqual("Cornelius", summaryInformation.propertySet0.getProperty(id: 0x00000008) as String?)
            XCTAssertEqual("66\0", summaryInformation.propertySet0.getProperty(id: 0x00000009) as String?)
            XCTAssertEqual(-11644444980.0, (summaryInformation.propertySet0.getProperty(id: 0x0000000A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1150137180.0, (summaryInformation.propertySet0.getProperty(id: 0x0000000B) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1157158680.0, (summaryInformation.propertySet0.getProperty(id: 0x0000000C) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1204954200.0, (summaryInformation.propertySet0.getProperty(id: 0x0000000D) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(0x0000000E, summaryInformation.propertySet0.getProperty(id: 0x0000000E) as Int32?)
            XCTAssertEqual(0x00000DE5, summaryInformation.propertySet0.getProperty(id: 0x0000000F) as Int32?)
            XCTAssertEqual(0x00004F38, summaryInformation.propertySet0.getProperty(id: 0x00000010) as Int32?)
            XCTAssertEqual("Microsoft Office Word\0\0", summaryInformation.propertySet0.getProperty(id: 0x00000012) as String?)
            XCTAssertEqual(0x00000000, summaryInformation.propertySet0.getProperty(id: 0x00000013) as Int32?)
            XCTAssertNil(summaryInformation.propertySet0.dictionary)
            XCTAssertNil(summaryInformation.propertySet1)
        }
        do {
            /// [MS-OLEPS] 3.2.2 PropertyBag Stream ("Docf_\005Bagaaqy23kudbhchAaq5u2chNd")
            /// This stream contains the non-simple property set storage format representing the PropertyBag property set (as described in
            /// section 3.2). The FMTID of the property set, FMTID_PropertyBag ({20001801-5DE6-11D1-8E38-00C04FB9386D}), as well as
            /// the fact that it is a non-simple property set, are indicated by its name, "Docf_\005Bagaaqy23kudbhchAaq5u2chNd", as
            /// specified in section 2.24.5.
            /// The stream's contents are in the format of a compound file (see [MS-CFB] for details). For brevity, the binary contents of
            /// this stream are omitted here. The compound file stored in this alternate stream represents a storage with the following elements:
            ///  A stream named "CONTENTS"
            ///  A stream named "prop6"
            ///  A storage named "prop12"
            /// The associated CLSID of the root storage is {994BFF53-DDF9-42AD-A56A-FFEA3617AC16}, which, as specified in section
            /// 2.22, is the associated CLSID of the property set. This value was set by the application and is not recognized by OLEPS
            /// implementations.
            /// [MS-OLEPS] 3.2.2.1 "CONTENTS" Stream
            /// The following table shows the binary contents of the "CONTENTS" stream.
            let data = Data([
                0xFE, 0xFF, 0x01, 0x00, 0x06, 0x00, 0x02, 0x00, 0x53, 0xFF, 0x4B, 0x99, 0xF9, 0xDD, 0xAD, 0x42,
                0xA5, 0x6A, 0xFF, 0xEA, 0x36, 0x17, 0xAC, 0x16, 0x01, 0x00, 0x00, 0x00, 0x01, 0x18, 0x00, 0x20,
                0xE6, 0x5D, 0xD1, 0x11, 0x8E, 0x38, 0x00, 0xC0, 0x4F, 0xB9, 0x38, 0x6D, 0x30, 0x00, 0x00, 0x00,
                0xDC, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x80, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x80, 0x68, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00,
                0x06, 0x00, 0x00, 0x00, 0x4C, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00,
                0x0C, 0x00, 0x00, 0x00, 0x7C, 0x01, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x94, 0x01, 0x00, 0x00,
                0x92, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xB0, 0x04, 0x00, 0x00,
                0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x08, 0x13, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
                0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x44, 0x00, 0x69, 0x00,
                0x73, 0x00, 0x70, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x79, 0x00, 0x43, 0x00, 0x6F, 0x00, 0x6C, 0x00,
                0x6F, 0x00, 0x75, 0x00, 0x72, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
                0x4D, 0x00, 0x79, 0x00, 0x53, 0x00, 0x74, 0x00, 0x72, 0x00, 0x65, 0x00, 0x61, 0x00, 0x6D, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x50, 0x00, 0x72, 0x00,
                0x69, 0x00, 0x63, 0x00, 0x65, 0x00, 0x28, 0x00, 0x47, 0x00, 0x42, 0x00, 0x50, 0x00, 0x29, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x79, 0x00,
                0x53, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x61, 0x00, 0x67, 0x00, 0x65, 0x00, 0x00, 0x00,
                0x27, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x43, 0x00, 0x61, 0x00, 0x73, 0x00, 0x65, 0x00,
                0x53, 0x00, 0x65, 0x00, 0x6E, 0x00, 0x73, 0x00, 0x69, 0x00, 0x74, 0x00, 0x69, 0x00, 0x76, 0x00,
                0x65, 0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x43, 0x00, 0x41, 0x00,
                0x53, 0x00, 0x45, 0x00, 0x53, 0x00, 0x45, 0x00, 0x4E, 0x00, 0x53, 0x00, 0x49, 0x00, 0x54, 0x00,
                0x49, 0x00, 0x56, 0x00, 0x45, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
                0x47, 0x00, 0x72, 0x00, 0x65, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00,
                0xCA, 0x84, 0x95, 0xF9, 0x23, 0xCA, 0x0B, 0x47, 0x83, 0x94, 0x22, 0x01, 0x77, 0x90, 0x7A, 0xAD,
                0x0C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x70, 0x00, 0x36, 0x00, 0x00, 0x00,
                0x06, 0x00, 0x00, 0x00, 0x00, 0x50, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00,
                0x0E, 0x00, 0x00, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x70, 0x00, 0x31, 0x00, 0x32, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
                0x03, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x03, 0xF8, 0x14, 0x17, 0x12, 0x87, 0x45, 0x29, 0x25, 0x11, 0x33, 0x56, 0x79, 0xA2, 0x9C, 0x00,
                0x0C, 0x10, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0xA9, 0x00, 0x00, 0x00,
                0x14, 0x00, 0x00, 0x00, 0xA9, 0x00, 0x76, 0x99, 0x3B, 0x22, 0x10, 0x9C, 
            ])
            var dataStream = DataStream(data)
            let summaryInformation = try PropertySetStream(dataStream: &dataStream)
            print(DumpFileTests.dump(propertyStream: summaryInformation))
        }
        do {
            let data = try getData(name: "sample", fileExtension: "doc")
            let file = try CompoundFile(data: data)
            var rootStorage = file.rootStorage
            var dataStream = rootStorage.children["\u{0005}SummaryInformation"]!.dataStream
            let summaryInformation = try PropertySetStream(dataStream: &dataStream)
            print(summaryInformation)
        }
    }

    static var allTests = [
        ("testExample", testExample),
    ]
}
